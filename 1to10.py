#!/usr/bin/env  python3
# encoding: utf-8

"""
@version: 0.1
@author: phpergao
@license: Apache Licence 
@contact: endoffight@gmail.com
@site: http://www.baidu.com
@software: PyCharm Community Edition
@file: 1to10.py.py
@time: 16-9-11 下午12:18
/usr/bin/python3.5 /home/lei/PycharmProjects/py_len/1to10.py
在1-10整数中，10个数怎样排列可以使(x+x+x)/(x+x+x)=(x+x)/(x+x)
x为1到10里面的某个整数，且每个数只能出现一次。

重复总数：19872
不重复总数：138
####################
(4+3+2)/(9+8+7)=(5+1)/(10+6)  相同个数:6424
(4+3+2)/(10+8+6)=(5+1)/(9+7)  相同个数:8
(5+3+1)/(9+8+7)=(4+2)/(10+6)  相同个数:1936
(5+3+1)/(10+8+6)=(4+2)/(9+7)  相同个数:8
(5+3+2)/(7+4+1)=(9+6)/(10+8)  相同个数:24
(5+4+1)/(7+3+2)=(9+6)/(10+8)  相同个数:356
(5+4+1)/(7+6+2)=(9+3)/(10+8)  相同个数:4
(5+4+3)/(7+2+1)=(10+8)/(9+6)  相同个数:60
(5+4+3)/(10+6+2)=(9+1)/(8+7)  相同个数:28
(5+4+3)/(10+7+1)=(8+2)/(9+6)  相同个数:4
(5+4+3)/(10+9+2)=(7+1)/(8+6)  相同个数:4
(6+3+1)/(9+4+2)=(7+5)/(10+8)  相同个数:1440
(6+4+2)/(8+7+3)=(9+1)/(10+5)  相同个数:184
(6+4+2)/(9+8+1)=(7+3)/(10+5)  相同个数:16
(6+4+2)/(10+5+3)=(9+1)/(8+7)  相同个数:12
(6+4+2)/(10+8+3)=(7+1)/(9+5)  相同个数:4
(6+5+3)/(9+8+4)=(7+1)/(10+2)  相同个数:276
(6+5+3)/(10+9+2)=(7+1)/(8+4)  相同个数:12
(6+5+4)/(7+2+1)=(10+8)/(9+3)  相同个数:52
(6+5+4)/(8+7+3)=(9+1)/(10+2)  相同个数:24
(6+5+4)/(9+8+1)=(7+3)/(10+2)  相同个数:12
(6+5+4)/(10+7+1)=(8+2)/(9+3)  相同个数:8
(7+2+1)/(5+4+3)=(9+6)/(10+8)  相同个数:1352
(7+2+1)/(6+5+4)=(9+3)/(10+8)  相同个数:16
(7+3+2)/(5+4+1)=(10+8)/(9+6)  相同个数:184
(7+3+2)/(8+6+4)=(9+1)/(10+5)  相同个数:20
(7+3+2)/(9+8+1)=(6+4)/(10+5)  相同个数:12
(7+4+1)/(5+3+2)=(10+8)/(9+6)  相同个数:248
(7+4+1)/(9+6+3)=(8+2)/(10+5)  相同个数:36
(7+4+1)/(10+5+3)=(8+2)/(9+6)  相同个数:20
(7+4+1)/(10+8+3)=(6+2)/(9+5)  相同个数:4
(7+4+1)/(10+9+2)=(5+3)/(8+6)  相同个数:4
(7+5+3)/(8+6+4)=(9+1)/(10+2)  相同个数:148
(7+5+3)/(9+8+1)=(6+4)/(10+2)  相同个数:12
(7+5+3)/(10+6+2)=(9+1)/(8+4)  相同个数:8
(7+6+1)/(9+8+4)=(5+3)/(10+2)  相同个数:180
(7+6+1)/(10+9+2)=(5+3)/(8+4)  相同个数:12
(7+6+2)/(5+4+1)=(10+8)/(9+3)  相同个数:36
(7+6+2)/(10+5+3)=(9+1)/(8+4)  相同个数:12
(7+6+3)/(10+9+5)=(4+2)/(8+1)  相同个数:24
(7+6+5)/(8+4+3)=(10+2)/(9+1)  相同个数:56
(7+6+5)/(10+3+2)=(8+4)/(9+1)  相同个数:28
(7+6+5)/(10+4+1)=(9+3)/(8+2)  相同个数:4
(7+6+5)/(10+9+8)=(3+1)/(4+2)  相同个数:8
(8+3+1)/(9+7+2)=(6+4)/(10+5)  相同个数:1068
(8+3+1)/(9+7+5)=(6+2)/(10+4)  相同个数:4
(8+3+1)/(10+7+4)=(6+2)/(9+5)  相同个数:8
(8+4+2)/(10+6+5)=(7+1)/(9+3)  相同个数:240
(8+4+3)/(7+6+5)=(9+1)/(10+2)  相同个数:40
(8+4+3)/(10+6+2)=(9+1)/(7+5)  相同个数:8
(8+5+1)/(10+7+4)=(6+2)/(9+3)  相同个数:216
(8+5+2)/(10+7+1)=(6+4)/(9+3)  相同个数:24
(8+6+1)/(9+5+4)=(7+3)/(10+2)  相同个数:24
(8+6+4)/(7+3+2)=(10+5)/(9+1)  相同个数:88
(8+6+4)/(7+5+3)=(10+2)/(9+1)  相同个数:8
(8+6+4)/(9+2+1)=(10+5)/(7+3)  相同个数:12
(8+6+4)/(9+5+1)=(10+2)/(7+3)  相同个数:4
(8+6+4)/(10+3+2)=(7+5)/(9+1)  相同个数:8
(8+7+1)/(10+9+5)=(4+2)/(6+3)  相同个数:168
(8+7+3)/(6+4+2)=(10+5)/(9+1)  相同个数:72
(8+7+3)/(6+5+4)=(10+2)/(9+1)  相同个数:8
(8+7+3)/(9+2+1)=(10+5)/(6+4)  相同个数:12
(8+7+3)/(9+5+1)=(10+2)/(6+4)  相同个数:4
(8+7+6)/(9+2+1)=(10+4)/(5+3)  相同个数:44
(8+7+6)/(9+4+1)=(10+2)/(5+3)  相同个数:4
(9+2+1)/(8+6+4)=(7+3)/(10+5)  相同个数:1100
(9+2+1)/(8+7+3)=(6+4)/(10+5)  相同个数:8
(9+2+1)/(8+7+6)=(5+3)/(10+4)  相同个数:4
(9+2+1)/(10+5+3)=(6+4)/(8+7)  相同个数:12
(9+2+1)/(10+7+4)=(5+3)/(8+6)  相同个数:4
(9+3+2)/(10+6+5)=(7+1)/(8+4)  相同个数:192
(9+4+1)/(8+7+6)=(5+3)/(10+2)  相同个数:108
(9+4+1)/(10+8+3)=(6+2)/(7+5)  相同个数:12
(9+4+2)/(6+3+1)=(10+8)/(7+5)  相同个数:24
(9+4+3)/(10+8+6)=(5+1)/(7+2)  相同个数:24
(9+5+1)/(8+6+4)=(7+3)/(10+2)  相同个数:180
(9+5+1)/(8+7+3)=(6+4)/(10+2)  相同个数:4
(9+5+1)/(10+6+2)=(7+3)/(8+4)  相同个数:8
(9+5+4)/(8+6+1)=(10+2)/(7+3)  相同个数:24
(9+6+3)/(7+4+1)=(10+5)/(8+2)  相同个数:136
(9+6+3)/(10+4+1)=(7+5)/(8+2)  相同个数:8
(9+7+2)/(8+3+1)=(10+5)/(6+4)  相同个数:24
(9+7+4)/(10+8+6)=(3+2)/(5+1)  相同个数:24
(9+7+5)/(8+3+1)=(10+4)/(6+2)  相同个数:40
(9+7+5)/(10+3+1)=(8+4)/(6+2)  相同个数:8
(9+8+1)/(6+4+2)=(10+5)/(7+3)  相同个数:208
(9+8+1)/(6+5+4)=(10+2)/(7+3)  相同个数:8
(9+8+1)/(7+3+2)=(10+5)/(6+4)  相同个数:8
(9+8+1)/(7+5+3)=(10+2)/(6+4)  相同个数:8
(9+8+1)/(10+3+2)=(7+5)/(6+4)  相同个数:8
(9+8+4)/(6+5+3)=(10+2)/(7+1)  相同个数:52
(9+8+4)/(7+6+1)=(10+2)/(5+3)  相同个数:12
(9+8+4)/(10+3+1)=(7+5)/(6+2)  相同个数:8
(9+8+7)/(4+3+2)=(10+6)/(5+1)  相同个数:60
(9+8+7)/(5+3+1)=(10+6)/(4+2)  相同个数:24
(9+8+7)/(10+4+2)=(6+3)/(5+1)  相同个数:24
(9+8+7)/(10+5+1)=(6+3)/(4+2)  相同个数:8
(9+8+7)/(10+6+4)=(5+1)/(3+2)  相同个数:4
(10+3+1)/(9+7+5)=(6+2)/(8+4)  相同个数:716
(10+3+1)/(9+8+4)=(6+2)/(7+5)  相同个数:4
(10+3+2)/(7+6+5)=(9+1)/(8+4)  相同个数:48
(10+3+2)/(8+6+4)=(9+1)/(7+5)  相同个数:12
(10+3+2)/(9+8+1)=(6+4)/(7+5)  相同个数:12
(10+4+1)/(7+6+5)=(8+2)/(9+3)  相同个数:208
(10+4+1)/(9+6+3)=(8+2)/(7+5)  相同个数:8
(10+4+2)/(9+8+7)=(5+1)/(6+3)  相同个数:24
(10+5+1)/(9+8+7)=(4+2)/(6+3)  相同个数:120
(10+5+3)/(6+4+2)=(8+7)/(9+1)  相同个数:68
(10+5+3)/(7+4+1)=(9+6)/(8+2)  相同个数:16
(10+5+3)/(7+6+2)=(8+4)/(9+1)  相同个数:4
(10+5+3)/(9+2+1)=(8+7)/(6+4)  相同个数:8
(10+6+2)/(5+4+3)=(8+7)/(9+1)  相同个数:160
(10+6+2)/(7+5+3)=(8+4)/(9+1)  相同个数:16
(10+6+2)/(8+4+3)=(7+5)/(9+1)  相同个数:8
(10+6+2)/(9+5+1)=(8+4)/(7+3)  相同个数:8
(10+6+4)/(9+8+7)=(3+2)/(5+1)  相同个数:24
(10+6+5)/(8+4+2)=(9+3)/(7+1)  相同个数:40
(10+6+5)/(9+3+2)=(8+4)/(7+1)  相同个数:8
(10+7+1)/(5+4+3)=(9+6)/(8+2)  相同个数:140
(10+7+1)/(6+5+4)=(9+3)/(8+2)  相同个数:20
(10+7+1)/(8+5+2)=(9+3)/(6+4)  相同个数:8
(10+7+4)/(8+3+1)=(9+5)/(6+2)  相同个数:60
(10+7+4)/(8+5+1)=(9+3)/(6+2)  相同个数:4
(10+7+4)/(9+2+1)=(8+6)/(5+3)  相同个数:8
(10+8+3)/(6+4+2)=(9+5)/(7+1)  相同个数:56
(10+8+3)/(7+4+1)=(9+5)/(6+2)  相同个数:8
(10+8+3)/(9+4+1)=(7+5)/(6+2)  相同个数:8
(10+8+6)/(4+3+2)=(9+7)/(5+1)  相同个数:48
(10+8+6)/(5+3+1)=(9+7)/(4+2)  相同个数:24
(10+8+6)/(9+4+3)=(7+2)/(5+1)  相同个数:16
(10+8+6)/(9+7+4)=(5+1)/(3+2)  相同个数:8
(10+9+2)/(5+4+3)=(8+6)/(7+1)  相同个数:84
(10+9+2)/(6+5+3)=(8+4)/(7+1)  相同个数:16
(10+9+2)/(7+4+1)=(8+6)/(5+3)  相同个数:16
(10+9+2)/(7+6+1)=(8+4)/(5+3)  相同个数:4
(10+9+5)/(7+6+3)=(8+1)/(4+2)  相同个数:36
(10+9+5)/(8+7+1)=(6+3)/(4+2)  相同个数:12
(10+9+8)/(7+6+5)=(4+2)/(3+1)  相同个数:24


"""

import itertools

v = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
list2 = []


class Main:
	def __init__(self):
		pass

list3 = []


def fun_getall():
	"""
	得到所有成立列表排列组合
	:return:
	"""
	for i in itertools.permutations(v, 10):
		list2.append(i)
	# count = 0
	# ca = []
	# cb = []
	# cc = []
	# cd = []
	# cs = []
	# cn = []
	for t in list2:
		a = t[0]+t[1]+t[2]
		b = t[3]+t[4]+t[5]
		c = t[6]+t[7]
		d = t[8]+t[9]
		if a*d == c*b:
			list3.append(t)
			# test = not(a in ca and b in cb and c in cc and d in cd and a*d in cs)  # 18
			# test2 = not(a in ca and a*d in cs)  # 13
			# if test:
			# 	ca.append(a)
			# 	cb.append(b)
			# 	cc.append(c)
			# 	cd.append(d)
			# 	cs.append(a*d)
			# 	count += 1
			# 	print("(%d+%d+%d)/(%d+%d+%d)=(%d+%d)/(%d+%d)" %(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9]))
	# print(count)


def my_print(t):
	print("(%d+%d+%d)/(%d+%d+%d)=(%d+%d)/(%d+%d)" %(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9]), end='')


def fun_qc(pa):
	"""
	迭代去重
	:param pa:
	:return:
	"""
	pa_len = len(pa)
	rt = []
	rt.append(pa[0])
	pa_i = 1
	for i1 in range(1, pa_len):
		tt = pa[pa_i]
		for i2 in range(pa_i+1, pa_len-1):
			jj = pa[i2]
			f1 = tt[4]*tt[5]*tt[3] == jj[4]*jj[5]*jj[3]
			f2 = tt[0]*tt[1]*tt[2] == jj[0]*jj[1]*jj[2]
			f3 = tt[7]*tt[6] == jj[7]*jj[6]
			f = not (f1 and f2 and f3)
			if f:
				rt.append(tt)
				pa_i = i2+1
				break
	return rt


def fun_getid(lsls):
	listrt = []
	for i in range(0, len(lsls)):
		ls = lsls[i]
		a = ls[0]+ls[1]+ls[2]  # 有无都一样
		b = ls[3]+ls[4]+ls[5]  # 有无都一样
		# c = ls[0]*ls[1]*ls[2]
		# d = ls[0]*ls[1]*ls[2]

		tl = [ls[0]*ls[1]*ls[2], ls[3]*ls[4]*ls[5], ls[6]*ls[7], ls[8]*ls[9]]  # , a, b]
		listrt.append(tl)
	return listrt


def l_eq_l_len_eq(l1, l2):  # 不相等
	if not(len(l1) == len(l2)):
		return False
	for i in range(0, len(l1)):
		if l1[i] == l2[i]:
			pass
		else:
			return False
	return True


def get_rt(l_id):
	list_rt = []
	tmp = l_id[0]
	j = 1
	j = 1
	xt = 1
	for i in range(0, len(l_id)):
		f = 1
		new = 0
		tmp = l_id[i]
		for j in range(0, len(l_id)):
			if not(i == j):
				if l_eq_l_len_eq(tmp, l_id[j]):
					xt += 1
					f = 0
					l_id[i].append("1")
					# break  　# 不统计
				else:
					pass

		if f == 1:
			list_rt.append([i, xt])
			xt = 1
	return list_rt


if __name__ == '__main__':
	fun_getall()
	# list3.append([9, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 8, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 8, 8, 9, 10])
	# list3.append([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	print("1 to 10 in a to j let (a+b+c)/(d+e+f)=(g+h)/(i+j)")
	lid = fun_getid(list3)
	rt = get_rt(lid)
	s = 0
	for i in range(0, len(rt)):
		tt=rt[i]
		myrt=list3[tt[0]]
		my_print(myrt)
		s = s + tt[1]
		print("  相同个数:"+str(tt[1]))

	print(" "*28 + "  相加结果："+str(s))
	print("重复总数："+str(len(list3)))
	print("不重复总数"+str(len(rt)))

	# list_ok1 = fun_qc(list3)
	# print(len(list_ok1))
	#
	# list_ok2 = fun_qc(list_ok1)
	# print(len(list_ok2))
	#
	# list_ok3 = fun_qc(list_ok2)
	# print(len(list_ok3))
	#
	# list_ok4 = fun_qc(list_ok3)
	# print(len(list_ok4))
	pass
